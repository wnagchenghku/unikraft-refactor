ifeq (x86_64,$(CONFIG_UK_ARCH))
KVM_LDSCRIPT  := -Wl,-T,$(CONFIG_UK_BASE)/plat/kvm/x86/link64.ld
KVM_LDFLAGS-y += -Wl,-m,elf_x86_64
endif

##
## Link image
##
KVM_IMAGE := $(BUILD_DIR)/$(CONFIG_UK_NAME)_kvm-$(CONFIG_UK_ARCH)

$(KVM_IMAGE): $(KVM_LINK) $(KVM_LINK-y) $(UK_LINK) $(UK_LINK-y)
	$(call build_cmd,LD,,$@.ld.o,\
	       $(LD) -r $(LIBLDFLAGS) $(LIBLDFLAGS-y) $(KVM_LDFLAGS) $(KVM_LDFLAGS-y) $^ -o $@.ld.o)
	$(call build_cmd,OBJCOPY,,$@.o,\
	       $(OBJCOPY) -w -G kvmos_* -G _libkvmplat_entry $@.ld.o $@.o)
ifeq (x86_64,$(CONFIG_UK_ARCH))
	$(call build_cmd,LD,,$@,\
	       $(LD) $(LDFLAGS) $(LDFLAGS-y) $(KVM_LDFLAGS) $(KVM_LDFLAGS-y) $(KVM_LDSCRIPT) $@.o -o $@)
ifeq ($(CONFIG_OPTIMIZE_DBGFILE),y)
	$(call build_cmd,OBJCOPY,,$@.dbg,\
	       $(OBJCOPY) --only-keep-debug $@ $@.dbg)
endif
ifeq ($(CONFIG_OPTIMIZE_SYMFILE),y)
	$(call build_cmd,NM,,$@.sym,\
	       $(NM) -n $@ > $@.sym)
endif
# TODO: We have to revisit stripping of KVM binaries. We noticed that sometimes
#       the images are broken and cannot be boot with QEMU's direct kernel boot
#       option (fread() error is returned).
#
#ifeq ($(CONFIG_OPTIMIZE_STRIP),y)
#	$(call verbose_cmd,STRIP,$(notdir $@),\
#	       $(STRIP) -s $@)
#endif
	$(call build_cmd,GZ,,$@.gz,\
	       $(GZIP) -f -9 -c $@ >$@.gz)
endif

# register image to the build
UK_IMAGES-$(CONFIG_PLAT_KVM) += $(KVM_IMAGE)

# ...for cleaning:
LIBKVMPLAT_CLEAN += $(call build_clean,$(KVM_IMAGE))
LIBKVMPLAT_CLEAN += $(call build_clean,$(KVM_IMAGE).gz)
LIBKVMPLAT_CLEAN += $(call build_clean,$(KVM_IMAGE).dbg)
LIBKVMPLAT_CLEAN += $(call build_clean,$(KVM_IMAGE).sym)
LIBKVMPLAT_CLEAN += $(call build_clean,$(KVM_IMAGE).o)
LIBKVMPLAT_CLEAN += $(call build_clean,$(KVM_IMAGE).ld.o)
